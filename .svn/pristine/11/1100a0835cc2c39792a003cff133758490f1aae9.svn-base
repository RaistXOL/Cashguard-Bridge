Imports System.ComponentModel
Imports System.IO
Imports System.Xml
Imports System.Xml.XPath

Public Class frm_main

    Public Const dLOGIN = 1

    Public Class ArgumentType
        Public nFunzione As Int32
    End Class

    Public Class Operatore
        Public Property cNomeOperatore As String
        Public Property nImportoNonIncassato As Single

    End Class


    Public Class oResult
        Public nFunzione As Int32
        Public lRisultato As Boolean
    End Class

    Public Sub PurgeOldLog(ByVal cPath As String)

        Dim cFiles As String = ""

        If Not cPath = "" Then

            For Each cFiles In Directory.GetFiles(cPath, "*.*", SearchOption.AllDirectories)

                If File.GetCreationTime(cFiles).Date < Date.Now.Date.AddDays(-30) Then
                    File.Delete(cFiles)
                End If
            Next

        End If

    End Sub

    Private Sub frm_main_Load(sender As Object, e As EventArgs) Handles MyBase.Load

        Dim oArgs As ArgumentType = New ArgumentType()
        Dim cBuffer As String

        oArgs.nFunzione = 1

        If Not Directory.Exists(Path.GetDirectoryName(cFileLog)) Then
            Directory.CreateDirectory(Path.GetDirectoryName(cFileLog))
        End If

        PurgeOldLog(Path.GetFullPath(cFileLog).Replace(Path.GetFileName(cFileLog), ""))

        oLog.AutoFlush = True

        frm_logviewer.Tag = cFileLog


        'frm_main_pagamento.Owner = Me
        'frm_main_pagamento.MdiParent = Me

        'frm_main_pagamento.Show()

        'impostazione iniziale form
        'frm_main_pagamento.Location = New Point(((Me.ClientSize.Width - frm_main_pagamento.Width) - 5) / 2, ((Me.ClientSize.Height - frm_main_pagamento.Height) - 30) / 2)
        cnt_status_levelwarning.Image = Nothing

        'marco come presente permanentemente la finestra incasso (riga 2 - colonna 3)
        'aWindows(1, 2) = 1

        oLog.WriteLine(WriteLogLine("(UI) inizializzazione form completata"))
        oLog.WriteLine(WriteLogLine("(CG) inizializzazione worker"))

        cBuffer = ReceiveTCP(My.Settings.cIP_cashprotect, 40001, "<App><CMActivateCashPoint ForceReset='False'/></App>")

        ParseAnswer(cBuffer)

        cBuffer = ReceiveTCP(My.Settings.cIP_cashprotect, 40001, "<App><CMPoll/></App>", "CMPoll")

        ParseAnswer(cBuffer)

        cnt_status_cguard_generale.Text = "interfaccia pronta"

    End Sub

    Private Sub frm_main_Resize(sender As Object, e As EventArgs) Handles Me.Resize
        frm_main_pagamento.Location = New Point(((Me.ClientSize.Width - frm_main_pagamento.Width) - 5) / 2, ((Me.ClientSize.Height - frm_main_pagamento.Height) - 30) / 2)
    End Sub


    Public Function ParseAnswer(cBuffer As String) As String()

        Dim aFrame() As String = {}
        Dim k

        If Not cBuffer = "" Then
            aFrame = cBuffer.Split({"</Cash>"}, StringSplitOptions.None)
        Else
            Return aFrame
        End If

        For k = 0 To aFrame.Length - 2
            aFrame(k) += "</Cash>"

            Dim oXml = XDocument.Parse(aFrame(k))

            ' analizzo primo nodo
            If oXml.FirstNode.ToString.Contains("CMWarning") Then
                cnt_status_cguard_generale.Text = oXml.Root.Element("CMWarning").Attribute("Description")
            ElseIf oXml.FirstNode.ToString.Contains("CMPoll") Then

                If oXml.XPathSelectElement("//Device[@Name='ENGINE']").Attribute("Status") = "WAIT_COMMAND" Then
                    cnt_status_cprotect_engine.Image = My.Resources.bullet_ball_glass_green
                ElseIf oXml.XPathSelectElement("//Device[@Name='ENGINE']").Attribute("Status").ToString.Contains("WAIT") Then
                    cnt_status_cprotect_engine.Image = My.Resources.bullet_ball_glass_yellow
                End If

                If oXml.XPathSelectElement("//Device[@Name='COINDEVICE']").Attribute("Status") = "READY_IDLE" Then
                    cnt_status_cprotect_coindevice.Image = My.Resources.bullet_ball_glass_green
                ElseIf oXml.XPathSelectElement("//Device[@Name='COINDEVICE']").Attribute("Status").ToString.Contains("ERROR") Then
                    cnt_status_cprotect_coindevice.Image = My.Resources.bullet_ball_glass_red
                End If

                If oXml.XPathSelectElement("//Device[@Name='BILLDEVICE']").Attribute("Status") = "READY_IDLE" Then
                    cnt_status_cprotect_billdevice.Image = My.Resources.bullet_ball_glass_green
                ElseIf oXml.XPathSelectElement("//Device[@Name='BILLDEVICE']").Attribute("Status").ToString.Contains("ERROR") Then
                    cnt_status_cprotect_billdevice.Image = My.Resources.bullet_ball_glass_red
                End If

            End If

        Next

        Return aFrame
    End Function

    Private Sub frm_main_Closing(sender As Object, e As CancelEventArgs) Handles Me.Closing
        Dim cMessaggio As String = Space(160)

        If MsgBox("la chiusura dell'applicazione causerà l'interruzione del collegamento fra farmaconsult e il Cashprotect" & vbCr & vbCr & "si desidera continuare?", MsgBoxStyle.Exclamation + MsgBoxStyle.YesNo, "conferma chiusura") = vbNo Then
            e.Cancel = True
        Else
            oLog.WriteLine(WriteLogLine("(UI) utente ha richiesto chiusura interfaccia"))

            cnt_status_cguard_generale.Text = "chiusura cassa in corso..."
            Me.Refresh()

            oTCPClient.Close()

            oLog.Flush()
            oLog.Dispose()
        End If
    End Sub



    Private Sub cnt_timer_polling_Tick(sender As Object, e As EventArgs) Handles cnt_timer_polling.Tick
        Dim aParametri() As String
        Dim k As Byte
        Dim cFiles As String()
        Dim nXMaxWindows As Byte = Me.Width \ frm_vendita.Width
        Dim nYMaxWindows As Byte = Me.Height \ frm_vendita.Height


        Try
            oLog.WriteLine(WriteLogLine("(DBG) inizio ricerca file comandi"))
            cFiles = Directory.GetFiles(My.Settings.cPath, "CPROTECT*.TXT")
            oLog.WriteLine(WriteLogLine("(DBG) fine ricerca file comandi"))

            For Each cFile As String In cFiles

                Using oFileStream As New StreamReader(cFile)
                    aParametri = Split(oFileStream.ReadToEnd(), ";")
                End Using

                If File.GetCreationTime(cFile).Date < Now.Date Or File.GetCreationTime(cFile).Date.Hour < Now.Date.Hour Then
                    File.Delete(cFile)
                End If

                '1 Parametro nel file == CODICE DI RITORNO ( es 1 )
                '2 Parametri nel file == CONTANTE INSERITO ( es imp;500 )
                '4 Parametri nel file == RICHIESTA INCASSO ( es 500;1;2 )
                '3 Parametri nel file == CANCELLA INCASSO ( es -999;1;2 )
                If aParametri.GetLength(0) = 4 Then
                    cnt_timer_polling.Enabled = False
                    oLog.WriteLine(WriteLogLine("(UI) trovato file comandi " + cFile))

                    If aParametri(0) = -999 Then
                        'cnt_log.Items.Add(DateTime.Now.ToLongTimeString + " > trovato file cashguard di annullamento transazione.")

                    Else
                        'cnt_log.Items.Add(DateTime.Now.ToLongTimeString + " > trovato file cashguard: importo =>" & aParametri(0))
                        ' LTrim( Str( nImporto ) ) + ";" + cOper + ";" + cJob + ";" + Operatori( 4, cOperatore )

                        ' posizione
                        k = nWindowsCount 'Application.OpenForms.Count - 2

                        Dim oForm As New frm_vendita

                        oForm.MdiParent = Me
                        oForm.Name = "vendita " + Trim(Str(k \ nXMaxWindows)) + "," + Trim(Str(k Mod nXMaxWindows))
                        oForm.cnt_pollingfilename.Text = cFile
                        oForm.cnt_importovendita.Text = aParametri(0)
                        oForm.cnt_vendita_oper.Text = aParametri(3) + "(" + aParametri(1) + ")"
                        oForm.cnt_vendita_dataora.Text = DateTime.Now.ToString
                        oForm.cnt_vendita_term.Text = aParametri(2)

                        oLog.WriteLine(WriteLogLine("(UI) creata finestra incasso, importo:" + aParametri(0) + " operatore:" + aParametri(1)))

                        Dim lLibero As Boolean = False
                        Dim nPos As Integer = 0

                        Do
                            If aWindows(nPos \ nXMaxWindows, nPos Mod nXMaxWindows) = 0 Then
                                lLibero = True
                            End If

                            nPos = nPos + 1

                        Loop Until lLibero

                        k = nPos - 1

                        oForm.Show()

                        oForm.Top = (IIf(k > 14, k - 14, k) \ nXMaxWindows) * oForm.Height '+ 50
                        oForm.Left = (k Mod nXMaxWindows) * (oForm.Width + 3)

                        aWindows(k \ nXMaxWindows, k Mod nXMaxWindows) = 1
                        oForm.cnt_counterform.Text = Trim(Str(k \ nXMaxWindows)) + "," + Trim(Str(k Mod nXMaxWindows))


                        mnu_elenco_finestre.DropDownItems.Add("vendita " + Trim(Str(k))).Name = "vendita " + Trim(Str(k \ nXMaxWindows)) + "," + Trim(Str(k Mod nXMaxWindows))

                        nWindowsCount = nWindowsCount + 1
                    End If

                    File.Delete(cFile)
                    cnt_timer_polling.Enabled = True
                    oLog.WriteLine(WriteLogLine("(UI) gestione terminata, finestra aperta in posizione " + Str(nXMaxWindows) + "." + LTrim(Str(k Mod nXMaxWindows))))

                Else

                End If

            Next

        Catch ex As Exception

            If TypeOf ex Is IOException Then
                oLog.WriteLine(WriteLogLine("(UI) errore: " + ex.Message + " " + ex.StackTrace))
            Else
                cnt_timer_polling.Enabled = False
                MsgBox(ex.Message, MsgBoxStyle.Critical, "Errore")
                oLog.WriteLine(WriteLogLine("(UI) errore: " + ex.Message + " " + ex.StackTrace))
            End If


        End Try
    End Sub

    Private Sub mnu_elenco_finestre_DropDownItemClicked(sender As Object, e As ToolStripItemClickedEventArgs) Handles mnu_elenco_finestre.DropDownItemClicked

        Application.OpenForms.Item(e.ClickedItem.Name).WindowState = FormWindowState.Normal

    End Sub


    Private Sub ReimpostaCashguardToolStripMenuItem_Click(sender As Object, e As EventArgs)
        Dim cMessaggio As String = Space(160)
        'oCashGuard.resetCG(cMessaggio)
        cnt_status_cguard_generale.Text = cMessaggio
    End Sub

    Private Sub ConfiguraInterfacciaToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles ConfiguraInterfacciaToolStripMenuItem.Click
        frm_configurazione.ShowDialog()
    End Sub

    Private Sub VisualizzaLogToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles VisualizzaLogToolStripMenuItem.Click
        frm_logviewer.ShowDialog()
    End Sub

    Private Sub ReimpostaPosizioneFinestreToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles mnu_importiaperti.Click

        Dim nOpenForms As Byte = Application.OpenForms.Count
        Dim k As Byte
        Dim nImporto As Single = 0
        Dim arrList As New ArrayList()


        For k = 1 To nOpenForms - 1

            If Application.OpenForms(k).Name.Contains("vendita") Then

                Dim query = From operatore As Operatore In arrList
                            Where operatore.cNomeOperatore = Application.OpenForms(k).Controls("groupbox1").Controls("cnt_vendita_oper").Text
                            Select operatore

                If query.Count > 0 Then
                    'Dim oOperatore As Operatore
                    For Each operatore As Operatore In query
                        operatore.cNomeOperatore = Application.OpenForms(k).Controls("groupbox1").Controls("cnt_vendita_oper").Text
                        operatore.nImportoNonIncassato = operatore.nImportoNonIncassato + Val(Application.OpenForms(k).Controls("cnt_importovendita").Text)
                        nImporto += Val(Application.OpenForms(k).Controls("cnt_importovendita").Text)
                    Next

                Else

                    Dim oOperatore As New Operatore With {.cNomeOperatore = Application.OpenForms(k).Controls("groupbox1").Controls("cnt_vendita_oper").Text, .nImportoNonIncassato = Val(Application.OpenForms(k).Controls("cnt_importovendita").Text)}
                    nImporto += Val(Application.OpenForms(k).Controls("cnt_importovendita").Text)
                    arrList.Add(oOperatore)
                End If
            End If

        Next

        If arrList.Count > 0 Then
            frm_report.dg_operatori.DataSource = arrList
            frm_report.dg_operatori.Columns("cNomeOperatore").HeaderText = "Nome Operatore (terminale)"
            frm_report.dg_operatori.Columns("nImportoNonIncassato").HeaderText = "Importo non incassato in €"
        End If
        frm_report.cnt_totale_rapportino.Text = Format(nImporto, "#####,##0.00")
        frm_report.ShowDialog()

    End Sub

    Private Sub frm_preleva_Click(sender As Object, e As EventArgs)
        frm_prelevamento.ShowDialog()
        frm_prelevamento.Dispose()
    End Sub


End Class
