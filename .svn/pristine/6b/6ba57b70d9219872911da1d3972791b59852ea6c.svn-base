Imports System.ComponentModel
Imports System.IO
Imports System.Xml
Imports System.Xml.XPath

Public Class frm_main

    Public Const dLOGIN = 1

    Public Class ArgumentType
        Public nFunzione As Int32
    End Class

    Public Class Operatore
        Public Property cNomeOperatore As String
        Public Property nImportoNonIncassato As Single

    End Class


    Public Class oResult
        Public nFunzione As Int32
        Public lRisultato As Boolean
    End Class


    Public Sub oCashGuard_CGErrorEvent(ByVal errorCode As Long, ByVal errorText As String, ByVal extInfo As String) 'Handles oCashGuard.CGErrorEvent
        cnt_status_cguard_generale.Text = errorText.ToLower + " (" + errorCode + ")"
        oLog.WriteLine(WriteLogLine("(CG) errore, messaggio:" + errorCode))
    End Sub

    Public Sub oCashGuard_CGStatusEvent(ByVal amount As Integer, ByVal status As Short, ByVal mode As Short) 'Handles oCashGuard.CGStatusEvent

        Dim aStato As String() = {"ok", "occupato", "errore", "pagamento disabilitato"}

        If status = CG_STATUS_OK Then
            cnt_status_cprotect_engine.Image = Cashprotect.My.Resources.bullet_ball_glass_green

            If amount > 0 Then
                frm_main_pagamento.cnt_change.Enabled = True
                frm_main_pagamento.cnt_reso_all.Enabled = True
                frm_main_pagamento.cnt_reso_last.Enabled = True
            Else
                frm_main_pagamento.cnt_change.Enabled = False
                frm_main_pagamento.cnt_reso_all.Enabled = False
                frm_main_pagamento.cnt_reso_last.Enabled = False

            End If



        ElseIf status = CG_STATUS_BUSY Then
            cnt_status_cprotect_engine.Image = Cashprotect.My.Resources.bullet_ball_glass_yellow

            frm_main_pagamento.cnt_change.Enabled = False
            frm_main_pagamento.cnt_reso_all.Enabled = False
            frm_main_pagamento.cnt_reso_last.Enabled = False

        ElseIf status = CG_STATUS_ERROR Or status = CG_STATUS_WARNING Then
            cnt_status_cprotect_engine.Image = Cashprotect.My.Resources.bullet_ball_glass_red

            frm_main_pagamento.cnt_change.Enabled = False
            frm_main_pagamento.cnt_reso_all.Enabled = False
            frm_main_pagamento.cnt_reso_last.Enabled = False

        End If

        frm_main_pagamento.cnt_importoinserito.Text = Format(amount / 100, "####0.00").Replace(",", ".")

    End Sub


    Public Sub oCashGuard_CGLevelWarningEvent(ByVal warningType As Integer, ByVal denomination As Long, ByVal numberOf As Integer, ByVal typeString As String, ByVal denominationString As String, ByVal warningMessage As String, ByVal extInfo As String) 'Handles oCashGuard.CGLevelWarningEvent


        Dim nDenomination As Byte = 0
        Dim cMessaggio As String = ""
        Dim cWarningMex As String = ""

        If warningType = CG_LEVEL_WARNING_HIGH Then
            cWarningMex = "livello alto"
        ElseIf warningType = CG_LEVEL_WARNING_LOW Then
            cWarningMex = "livello basso"
        ElseIf warningType = CG_LEVEL_WARNING_EMPTY Then
            cWarningMex = "vuoto"
        End If
        cMessaggio += denomination / 100 + " " + cWarningMex & vbCrLf

        cnt_status_levelwarning.ToolTipText = cMessaggio
        cnt_status_levelwarning.Image = My.Resources.warning
        cnt_status_levelwarning.Visible = True

    End Sub

    Public Sub PurgeOldLog(ByVal cPath As String)

        Dim cFiles As String = ""

        If Not cPath = "" Then

            For Each cFiles In Directory.GetFiles(cPath, "*.*", SearchOption.AllDirectories)

                If File.GetCreationTime(cFiles).Date < Date.Now.Date.AddDays(-30) Then
                    File.Delete(cFiles)
                End If
            Next

        End If

    End Sub

    Private Sub frm_main_Load(sender As Object, e As EventArgs) Handles MyBase.Load

        Dim oArgs As ArgumentType = New ArgumentType()
        Dim cBuffer As String

        oArgs.nFunzione = 1

        If Not Directory.Exists(Path.GetDirectoryName(cFileLog)) Then
            Directory.CreateDirectory(Path.GetDirectoryName(cFileLog))
        End If

        PurgeOldLog(Path.GetFullPath(cFileLog).Replace(Path.GetFileName(cFileLog), ""))

        oLog.AutoFlush = True

        frm_logviewer.Tag = cFileLog


        'frm_main_pagamento.Owner = Me
        'frm_main_pagamento.MdiParent = Me

        'frm_main_pagamento.Show()

        'impostazione iniziale form
        'frm_main_pagamento.Location = New Point(((Me.ClientSize.Width - frm_main_pagamento.Width) - 5) / 2, ((Me.ClientSize.Height - frm_main_pagamento.Height) - 30) / 2)
        cnt_status_levelwarning.Image = Nothing

        'marco come presente permanentemente la finestra incasso (riga 2 - colonna 3)
        'aWindows(1, 2) = 1

        oLog.WriteLine(WriteLogLine("(UI) inizializzazione form completata"))
        oLog.WriteLine(WriteLogLine("(CG) inizializzazione worker"))

        'cnt_bgworker.RunWorkerAsync(oArgs)

        cBuffer = ReceiveTCP(My.Settings.cIP_cashprotect, 40001, "<App><CMActivateCashPoint ForceReset='False'/></App>")

        ParseAnswer(cBuffer)

        cBuffer = ReceiveTCP(My.Settings.cIP_cashprotect, 40001, "<App><CMPoll/></App>", "CMPoll")

        ParseAnswer(cBuffer)

        cnt_status_cguard_generale.Text = "interfaccia pronta"

    End Sub

    Private Sub frm_main_Resize(sender As Object, e As EventArgs) Handles Me.Resize
        frm_main_pagamento.Location = New Point(((Me.ClientSize.Width - frm_main_pagamento.Width) - 5) / 2, ((Me.ClientSize.Height - frm_main_pagamento.Height) - 30) / 2)
    End Sub


    Public Function ParseAnswer(cBuffer As String) As String()

        Dim aFrame() As String
        Dim k

        If Not cBuffer = "" Then
            aFrame = cBuffer.Split({"</Cash>"}, StringSplitOptions.None)
        Else
            Exit Function
        End If

        For k = 0 To aFrame.Length - 2
            aFrame(k) += "</Cash>"

            Dim oXml = XDocument.Parse(aFrame(k))

            ' analizzo primo nodo
            If oXml.FirstNode.ToString.Contains("CMWarning") Then
                cnt_status_cguard_generale.Text = oXml.Root.Element("CMWarning").Attribute("Description")
            ElseIf oXml.FirstNode.ToString.Contains("CMPoll") Then

                If oXml.XPathSelectElement("//Device[@Name='ENGINE']").Attribute("Status") = "WAIT_COMMAND" Then
                    cnt_status_cprotect_engine.Image = My.Resources.bullet_ball_glass_green
                ElseIf oXml.XPathSelectElement("//Device[@Name='ENGINE']").Attribute("Status").ToString.Contains("WAIT") Then
                    cnt_status_cprotect_engine.Image = My.Resources.bullet_ball_glass_yellow
                End If

                If oXml.XPathSelectElement("//Device[@Name='COINDEVICE']").Attribute("Status") = "READY_IDLE" Then
                    cnt_status_cprotect_coindevice.Image = My.Resources.bullet_ball_glass_green
                ElseIf oXml.XPathSelectElement("//Device[@Name='COINDEVICE']").Attribute("Status").ToString.Contains("ERROR") Then
                    cnt_status_cprotect_coindevice.Image = My.Resources.bullet_ball_glass_red
                End If

                If oXml.XPathSelectElement("//Device[@Name='BILLDEVICE']").Attribute("Status") = "READY_IDLE" Then
                    cnt_status_cprotect_billdevice.Image = My.Resources.bullet_ball_glass_green
                ElseIf oXml.XPathSelectElement("//Device[@Name='BILLDEVICE']").Attribute("Status").ToString.Contains("ERROR") Then
                    cnt_status_cprotect_billdevice.Image = My.Resources.bullet_ball_glass_red
                End If

            End If

        Next

        Return aFrame
    End Function

    Private Sub cnt_bgworker_DoWork(sender As Object, e As System.ComponentModel.DoWorkEventArgs) Handles cnt_bgworker.DoWork

        Dim nStatus
        Dim cMessaggio As String = Space(60)

        Dim args As ArgumentType = e.Argument

        Dim oReturn As New oResult

        If args.nFunzione = dLOGIN Then

            oReturn.nFunzione = dLOGIN

            cnt_bgworker.ReportProgress(10)
            oLog.WriteLine(WriteLogLine("(CP) attivazione In corso... " + Trim(My.Settings.cIP_cashprotect)))

            Dim cBuffer = ReceiveTCP(My.Settings.cIP_cashprotect, 40001, "<App><CMActivateCashPoint ForceReset='False'/></App>")

            'ParseAnswer(cBuffer)

            oLog.WriteLine(WriteLogLine("(CG) inizializzazione com completata, messaggio: " + cMessaggio))

            If nStatus = CG_STATUS_OK Then
                cnt_bgworker.ReportProgress(20, cMessaggio)
            Else
                oLog.WriteLine(WriteLogLine("(CG) errore in apertura com, messaggio:" + cMessaggio))
                oReturn.lRisultato = False
                e.Result = oReturn

                Exit Sub
            End If

            cnt_bgworker.ReportProgress(30)
            oLog.WriteLine(WriteLogLine("(CG) login operatore "))
            'nStatus = oCashGuard.loginStrCG("1", "T", cMessaggio)
            oLog.WriteLine(WriteLogLine("(CG) login operatore completato, messaggio:" + cMessaggio))

            If nStatus = CG_STATUS_OK Then
                cnt_bgworker.ReportProgress(40, cMessaggio)
                cnt_bgworker.ReportProgress(50, cMessaggio)
                oLog.WriteLine(WriteLogLine("(CG) apertura cassa"))
                'oCashGuard.enablePayinCG(cMessaggio)
                oLog.WriteLine(WriteLogLine("(CG) apertura cassa completata, messaggio:" + cMessaggio))
            Else
                oLog.WriteLine(WriteLogLine("(CG) errore in apertura cassa, messaggio:" + cMessaggio))
                oReturn.lRisultato = False
                e.Result = oReturn
                Exit Sub
            End If

            cnt_bgworker.ReportProgress(60, cMessaggio)
            oLog.WriteLine(WriteLogLine("(UI) fine procedura worker"))
            oReturn.lRisultato = True
            e.Result = oReturn
        End If


    End Sub

    Private Sub cnt_bgworker_ProgressChanged(sender As Object, e As ProgressChangedEventArgs) Handles cnt_bgworker.ProgressChanged

        If e.ProgressPercentage = 10 Then
            cnt_status_cguard_generale.Text = "apertura com in corso..."
            Me.Refresh()
        ElseIf e.ProgressPercentage = 20 Then
            cnt_status_cguard_generale.Text += "apertura completata (" + e.UserState + ")"
            Me.Refresh()
        ElseIf e.ProgressPercentage = 30 Then
            cnt_status_cguard_generale.Text = "login in corso..."
            Me.Refresh()
        ElseIf e.ProgressPercentage = 40 Then
            cnt_status_cguard_generale.Text = "login completato (" + e.UserState + ")"
            Me.Refresh()
        ElseIf e.ProgressPercentage = 50 Then
            cnt_status_cguard_generale.Text = "apertura cashguard in corso..."
            Me.Refresh()
        ElseIf e.ProgressPercentage = 60 Then
            cnt_status_cguard_generale.Text = "apertura completata (" + e.UserState + ")"
            Me.Refresh()
        End If

    End Sub

    Private Sub cnt_status_cguard_Click(sender As Object, e As EventArgs) Handles cnt_status_cprotect_engine.Click

    End Sub

    Private Sub cnt_bgworker_RunWorkerCompleted(sender As Object, e As RunWorkerCompletedEventArgs) Handles cnt_bgworker.RunWorkerCompleted

        ' login ok
        If e.Result.nFunzione = dLOGIN And e.Result.lRisultato Then



        End If


    End Sub

    Private Sub frm_main_Closing(sender As Object, e As CancelEventArgs) Handles Me.Closing
        Dim cMessaggio As String = Space(160)

        If MsgBox("la chiusura dell'applicazione causerà l'interruzione del collegamento fra farmaconsult e il Cashprotect" & vbCr & vbCr & "si desidera continuare?", MsgBoxStyle.Exclamation + MsgBoxStyle.YesNo, "conferma chiusura") = vbNo Then
            e.Cancel = True
        Else
            oLog.WriteLine(WriteLogLine("(UI) utente ha richiesto chiusura interfaccia"))

            cnt_status_cguard_generale.Text = "chiusura cassa in corso..."
            Me.Refresh()

            oTCPClient.Close()

            oLog.Flush()
            oLog.Dispose()
        End If
    End Sub

    Private Sub cnt_fswatcher_Created(sender As Object, e As IO.FileSystemEventArgs)

        Dim cFile As String = e.FullPath
        Dim aParametri() As String

        MsgBox(cFile)

        Using oFileStream As New StreamReader(cFile)
            aParametri = Split(oFileStream.ReadToEnd(), ";")
        End Using

        If File.GetCreationTime(cFile).Date < Date.Now.Date Then
            File.Delete(cFile)
        End If

        '1 Parametro nel file == CODICE DI RITORNO ( es 1 )
        '2 Parametri nel file == CONTANTE INSERITO ( es imp;500 )
        '4 Parametri nel file == RICHIESTA INCASSO ( es 500;1;2 )
        '3 Parametri nel file == CANCELLA INCASSO ( es -999;1;2 )
        If aParametri.GetLength(0) = 4 Then
            'cnt_polling.Enabled = False

            If aParametri(0) = -999 Then
                'cnt_log.Items.Add(DateTime.Now.ToLongTimeString + " > trovato file cashguard di annullamento transazione.")

            Else
                'cnt_log.Items.Add(DateTime.Now.ToLongTimeString + " > trovato file cashguard: importo =>" & aParametri(0))

                'oForm.Show()
                Dim oForm As New frm_vendita

                oForm.MdiParent = Me
                oForm.Owner = Me

                oForm.Text = oForm.Text
                oForm.cnt_importovendita.Text = aParametri(0)
                oForm.cnt_vendita_oper.Text = aParametri(2)
                oForm.cnt_vendita_dataora.Text = DateTime.Now.ToString
                oForm.cnt_vendita_term.Text = aParametri(3)
                'oForm.cnt_filename.Text = cFile

                oForm.Show()



            End If

            File.Delete(cFile)

        Else

        End If

    End Sub

    Private Sub cnt_timer_polling_Tick(sender As Object, e As EventArgs) Handles cnt_timer_polling.Tick
        Dim aParametri() As String
        Dim k As Byte
        Dim cFiles As String()
        Dim nXMaxWindows As Byte = Me.Width \ frm_vendita.Width
        Dim nYMaxWindows As Byte = Me.Height \ frm_vendita.Height


        Try
            oLog.WriteLine(WriteLogLine("(DBG) inizio ricerca file comandi"))
            cFiles = Directory.GetFiles(My.Settings.cPath, "CPROTECT*.TXT")
            oLog.WriteLine(WriteLogLine("(DBG) fine ricerca file comandi"))

            For Each cFile As String In cFiles

                Using oFileStream As New StreamReader(cFile)
                    aParametri = Split(oFileStream.ReadToEnd(), ";")
                End Using

                If File.GetCreationTime(cFile).Date < Now.Date Or File.GetCreationTime(cFile).Date.Hour < Now.Date.Hour Then
                    File.Delete(cFile)
                End If

                '1 Parametro nel file == CODICE DI RITORNO ( es 1 )
                '2 Parametri nel file == CONTANTE INSERITO ( es imp;500 )
                '4 Parametri nel file == RICHIESTA INCASSO ( es 500;1;2 )
                '3 Parametri nel file == CANCELLA INCASSO ( es -999;1;2 )
                If aParametri.GetLength(0) = 4 Then
                    cnt_timer_polling.Enabled = False
                    oLog.WriteLine(WriteLogLine("(UI) trovato file comandi " + cFile))

                    If aParametri(0) = -999 Then
                        'cnt_log.Items.Add(DateTime.Now.ToLongTimeString + " > trovato file cashguard di annullamento transazione.")

                    Else
                        'cnt_log.Items.Add(DateTime.Now.ToLongTimeString + " > trovato file cashguard: importo =>" & aParametri(0))
                        ' LTrim( Str( nImporto ) ) + ";" + cOper + ";" + cJob + ";" + Operatori( 4, cOperatore )

                        ' posizione
                        k = nWindowsCount 'Application.OpenForms.Count - 2

                        Dim oForm As New frm_vendita

                        oForm.MdiParent = Me
                        oForm.Name = "vendita " + Trim(Str(k \ nXMaxWindows)) + "," + Trim(Str(k Mod nXMaxWindows))
                        oForm.cnt_pollingfilename.Text = cFile
                        oForm.cnt_importovendita.Text = aParametri(0)
                        oForm.cnt_vendita_oper.Text = aParametri(3) + "(" + aParametri(1) + ")"
                        oForm.cnt_vendita_dataora.Text = DateTime.Now.ToString
                        oForm.cnt_vendita_term.Text = aParametri(2)

                        oLog.WriteLine(WriteLogLine("(UI) creata finestra incasso, importo:" + aParametri(0) + " operatore:" + aParametri(1)))

                        Dim lLibero As Boolean = False
                        Dim nPos As Integer = 0

                        Do
                            If aWindows(nPos \ nXMaxWindows, nPos Mod nXMaxWindows) = 0 Then
                                lLibero = True
                            End If

                            nPos = nPos + 1

                        Loop Until lLibero

                        k = nPos - 1

                        oForm.Show()

                        oForm.Top = (IIf(k > 14, k - 14, k) \ nXMaxWindows) * oForm.Height '+ 50
                        oForm.Left = (k Mod nXMaxWindows) * (oForm.Width + 3)

                        aWindows(k \ nXMaxWindows, k Mod nXMaxWindows) = 1
                        oForm.cnt_counterform.Text = Trim(Str(k \ nXMaxWindows)) + "," + Trim(Str(k Mod nXMaxWindows))


                        mnu_elenco_finestre.DropDownItems.Add("vendita " + Trim(Str(k))).Name = "vendita " + Trim(Str(k \ nXMaxWindows)) + "," + Trim(Str(k Mod nXMaxWindows))

                        nWindowsCount = nWindowsCount + 1
                    End If

                    File.Delete(cFile)
                    cnt_timer_polling.Enabled = True
                    oLog.WriteLine(WriteLogLine("(UI) gestione terminata, finestra aperta in posizione " + Str(nXMaxWindows) + "." + LTrim(Str(k Mod nXMaxWindows))))

                Else

                End If

            Next

        Catch ex As Exception

            If TypeOf ex Is IOException Then
                oLog.WriteLine(WriteLogLine("(UI) errore: " + ex.Message + " " + ex.StackTrace))
            Else
                cnt_timer_polling.Enabled = False
                MsgBox(ex.Message, MsgBoxStyle.Critical, "Errore")
                oLog.WriteLine(WriteLogLine("(UI) errore: " + ex.Message + " " + ex.StackTrace))
            End If


        End Try
    End Sub

    Private Sub mnu_elenco_finestre_Click(sender As Object, e As EventArgs) Handles mnu_elenco_finestre.Click


    End Sub

    Private Sub mnu_elenco_finestre_DropDownItemClicked(sender As Object, e As ToolStripItemClickedEventArgs) Handles mnu_elenco_finestre.DropDownItemClicked

        Application.OpenForms.Item(e.ClickedItem.Name).WindowState = FormWindowState.Normal

    End Sub

    Private Sub mnu_main_Opening(sender As Object, e As CancelEventArgs) Handles mnu_main.Opening

    End Sub

    Private Sub ReimpostaCashguardToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles ReimpostaCashguardToolStripMenuItem.Click
        Dim cMessaggio As String = Space(160)
        'oCashGuard.resetCG(cMessaggio)
        cnt_status_cguard_generale.Text = cMessaggio
    End Sub

    Private Sub ConfiguraInterfacciaToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles ConfiguraInterfacciaToolStripMenuItem.Click
        frm_configurazione.ShowDialog()
    End Sub

    Private Sub VisualizzaLogToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles VisualizzaLogToolStripMenuItem.Click
        frm_logviewer.ShowDialog()
    End Sub

    Private Sub ReimpostaPosizioneFinestreToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles mnu_importiaperti.Click

        Dim nOpenForms As Byte = Application.OpenForms.Count
        Dim k As Byte
        Dim nImporto As Single = 0
        Dim arrList As New ArrayList()


        For k = 1 To nOpenForms - 1

            If Application.OpenForms(k).Name.Contains("vendita") Then

                Dim query = From operatore As Operatore In arrList
                            Where operatore.cNomeOperatore = Application.OpenForms(k).Controls("groupbox1").Controls("cnt_vendita_oper").Text
                            Select operatore

                If query.Count > 0 Then
                    'Dim oOperatore As Operatore
                    For Each operatore As Operatore In query
                        operatore.cNomeOperatore = Application.OpenForms(k).Controls("groupbox1").Controls("cnt_vendita_oper").Text
                        operatore.nImportoNonIncassato = operatore.nImportoNonIncassato + Val(Application.OpenForms(k).Controls("cnt_importovendita").Text)
                        nImporto += Val(Application.OpenForms(k).Controls("cnt_importovendita").Text)
                    Next

                Else

                    Dim oOperatore As New Operatore With {.cNomeOperatore = Application.OpenForms(k).Controls("groupbox1").Controls("cnt_vendita_oper").Text, .nImportoNonIncassato = Val(Application.OpenForms(k).Controls("cnt_importovendita").Text)}
                    nImporto += Val(Application.OpenForms(k).Controls("cnt_importovendita").Text)
                    arrList.Add(oOperatore)
                End If
            End If

        Next

        If arrList.Count > 0 Then
            frm_report.dg_operatori.DataSource = arrList
            frm_report.dg_operatori.Columns("cNomeOperatore").HeaderText = "Nome Operatore (terminale)"
            frm_report.dg_operatori.Columns("nImportoNonIncassato").HeaderText = "Importo non incassato in €"
        End If
        frm_report.cnt_totale_rapportino.Text = Format(nImporto, "#####,##0.00")
        frm_report.ShowDialog()

    End Sub

    Private Sub frm_preleva_Click(sender As Object, e As EventArgs) Handles frm_preleva.Click
        frm_prelevamento.ShowDialog()
        frm_prelevamento.Dispose()
    End Sub

    Private Sub EventLog1_EntryWritten(sender As Object, e As EntryWrittenEventArgs) Handles EventLog1.EntryWritten

    End Sub

    Private Sub StatusStrip1_ItemClicked(sender As Object, e As ToolStripItemClickedEventArgs) Handles StatusStrip1.ItemClicked

    End Sub
End Class
